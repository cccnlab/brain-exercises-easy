:root {
    --instruction-text-color: #393939;
    --next-button-color: #297AF4;
    --back-button-color: #6C6C6C;
}

#SSInstructionHeader {
    height: 14.22vh;
    height: calc(var(--vh, 1vh) * 14.22);
}

#SSInstructionBody {
    height: 85.78vh;
    height: calc(var(--vh, 1vh) * 85.78);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.SSInstructionBodyProgressBar {
    height: 10%;
}

.SSInstructionWindow {
    height: 60%;
}

.SSInstructionEnterButton {
    height: 20%;
}

.cirButtonInstruction {
    position: absolute;
    display: block;
    width: var(--cir-base-unit);
    line-height: var(--cir-base-unit);
    height: var(--cir-base-unit);
    border-radius: 50%;
    text-align: center;
    background: var(--rest-color);
    border: calc(var(--this-sum) / 411.33) solid var(--rest-border-color);
    padding: 0;
    transition: 0.05s ease;
    cursor: pointer;
}

.cirButtonInstruction:hover {
    border-color: white;
}

.cirButtonInstruction:focus {
    outline: 0;
}

.cirButtonInstruction.hoverDisabled {
    pointer-events: none;
    background: var(--rest-color);
    border: calc(var(--this-sum) / 411.33) solid var(--rest-border-color);
    transition: 0.05s ease;
}

.cirButtonInstruction.pop {
    background-color: var(--cue-color);
    border-color: var(--cue-border-color);
}

.cirButtonInstruction.readyToClick, .signal.readyToClick {
    background-color: white;
    border-color: var(--cue-border-color);
}

.cirButtonInstruction.clicked {
    background-color: var(--cue-color);
    box-shadow: 
    calc(var(--this-sum) / -1234)
    calc(var(--this-sum) / -1234)
    calc(var(--this-sum) / 617)
    rgba(255, 255, 255, 0.1), 
    calc(var(--this-sum) / 1234)
    calc(var(--this-sum) / 1234)
    calc(var(--this-sum) / 617)
    rgba(0, 0, 0, 0.1);
}

#cirButton1Instruction {
    left: calc(50% - var(--cir-base-unit)/2.0);
    top: calc(50% - var(--cir-span-radius) - var(--cir-base-unit)/2.0);
}

#cirButton2Instruction {
    left: calc(50% + var(--cir-span-radius)*var(--cos30) - var(--cir-base-unit)/2.0);
    top: calc(50% - var(--cir-span-radius)*var(--sin30) - var(--cir-base-unit)/2.0);
}

#cirButton3Instruction {
    left: calc(50% + var(--cir-span-radius)*var(--cos30) - var(--cir-base-unit)/2.0);
    top: calc(50% + var(--cir-span-radius)*var(--sin30) - var(--cir-base-unit)/2.0);
}

#cirButton4Instruction {
    left: calc(50% - var(--cir-base-unit)/2.0);
    top: calc(50% + var(--cir-span-radius) - var(--cir-base-unit)/2.0);
}

#cirButton5Instruction {
    left: calc(50% - var(--cir-span-radius)*var(--cos30) - var(--cir-base-unit)/2.0);
    top: calc(50% + var(--cir-span-radius)*var(--sin30) - var(--cir-base-unit)/2.0);
}

#cirButton6Instruction {
    left: calc(50% - var(--cir-span-radius)*var(--cos30) - var(--cir-base-unit)/2.0);
    top: calc(50% - var(--cir-span-radius)*var(--sin30) - var(--cir-base-unit)/2.0);
}

.cirButtonInstructionBorder.clicked {
    width: var(--border-base-unit);
    height: var(--border-base-unit);
    border-radius: 50%;
    position: absolute;
    top: calc(var(--this-sum) / -80);
    left: calc(var(--this-sum) / -80);
}

.signalInstruction {
    position: absolute;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    color: rgb(0, 0, 0);
    text-align: center;
    height: var(--cir-base-unit);
    width: calc(var(--this-sum) / 14.35);
}

#goSignalInstruction {
    border-radius: 50%;
    left: calc(50% - calc(var(--this-sum) / 14.35) /2.0);
    top: calc(50% - max(0px, calc(var(--cir-span-radius)/2.6)));
    line-height: calc(var(--this-sum) / 34.28);
    font-size: calc(var(--this-sum) / 36.29);
    font-weight: 400;
}

.cirBtnContainerInstruction {
    -webkit-tap-highlight-color: transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row;
    position: relative;
    height: calc(var(--outer-button) + calc(var(--this-sum) / 18));
    min-width: calc(var(--this-sum) / 3.65);
    padding: 
    calc(var(--this-sum) / 77.125)
    calc(var(--this-sum) / 102.83)
    calc(var(--this-sum) / 77.125)
    calc(var(--this-sum) / 102.83);
    left: 0;
    background-color: #FFFFFF;
    border-radius: calc(var(--this-sum) / 154.25);
    bottom: calc(var(--this-sum) / 77.125);
}

.exampleText {
    color: red;
    text-decoration-line: underline;
    position: absolute;
    font-size: calc(var(--this-sum) / 56.09);
    top: calc(var(--this-sum) / 123.4);
    left: calc(var(--this-sum) / 123.4);
}

.pointingHand {
    top: calc(var(--this-sum) / 5);
    left: calc(var(--this-sum) / 5.46);
    position: absolute;
    z-index: 1;
    height: calc(var(--this-sum) / 11.22);
    width: calc(var(--this-sum) / 18.70);
    opacity: 0;
}

.clickTheButton {
    animation: clickTheButton 4s linear normal;
    opacity: 1;
}

@keyframes clickTheButton {
    0% {
        top: calc(var(--this-sum) / 5);
        left: calc(var(--this-sum) / 5.46);
        transform: rotate(0deg)
    }
    16% {
        top: calc(var(--this-sum) / 13.71);
        left: calc(var(--this-sum) / 4.88);
        transform: rotate(0deg)
    }
    32% {
        top: calc(var(--this-sum) / 13.71);
        left: calc(var(--this-sum) / 4.88);
        transform: rotate(-10deg);
    }
    48% {
        top: calc(var(--this-sum) / 13.71);
        left: calc(var(--this-sum) / 4.88);
        transform: rotate(0deg);
    }
    64% {
        top: calc(var(--this-sum) / 6.14);
        left: calc(var(--this-sum) / 12.85);
        transform: rotate(0deg);
    }
    80% {
        top: calc(var(--this-sum) / 6.14);
        left: calc(var(--this-sum) / 12.85);
        transform: rotate(-10deg);
    }
    96% {
        top: calc(var(--this-sum) / 6.14);
        left: calc(var(--this-sum) / 12.85);
        transform: rotate(0deg);
    }
}

.cir2Pop {
    animation: cir2Pop 4s linear normal;
}

@keyframes cir2Pop {
    0% {
        background: #FFFFFF;
    }
    16% {
        background: #FFFFFF;
    }
    32% {
        background: var(--cue-color);
    }
    48% {
        background: #FFFFFF;
    }
    64% {
        background: #FFFFFF;
    }
    80% {
        background: #FFFFFF;
    }
    96% {
        background: #FFFFFF;
    }
}

.cir5Pop {
    animation: cir5Pop 4s linear normal;
}

@keyframes cir5Pop {
    0% {
        background: #FFFFFF;
    }
    16% {
        background: #FFFFFF;
    }
    32% {
        background: #FFFFFF;
    }
    48% {
        background: #FFFFFF;
    }
    64% {
        background: #FFFFFF;
    }
    80% {
        background: var(--cue-color);
    }
    96% {
        background: #FFFFFF;
    }
}

.cir2Clicked {
    animation: cir2Clicked 4s linear normal;
}

@keyframes cir2Clicked {
    0% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    16% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    32% {
        border: calc(var(--this-sum) / 154.25) solid var(--cue-border-color);
    }
    48% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    64% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    80% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    96% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
}

.cir5Clicked {
    animation: cir5Clicked 4s linear normal;
}

@keyframes cir5Clicked {
    0% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    16% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    32% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    48% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    64% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
    80% {
        border: calc(var(--this-sum) / 154.25) solid var(--cue-border-color);
    }
    96% {
        border: calc(var(--this-sum) / 154.25) solid #FFFFFF;
    }
}

.onHide {
    display: none;
}

.tutorial {
    background: rgba(0, 0, 0, 0.65);
    position: absolute;
    height: calc(var(--vh, 1vh) * 100);
    left: 0%;
    right: 0%;
    top: 0%;
    bottom: 0%;
    z-index: 11;
    display: flex;
    justify-content: center;
}

.instructionContainer {
    display: flex;
    flex-direction: column;
    padding: 0;
    position: absolute;
    width: fit-content;
    height: fit-content; 
    bottom: calc(var(--this-sum) / 88.14);

    p {
        margin-top: 0;
        margin-bottom: 1rem;
    }
}

.centered {
    align-items: center;
    min-width: calc(var(--this-sum) / 3.43);
}

.instructionBox {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    padding: calc(var(--this-sum) / 77.125);
    gap: calc(var(--this-sum) / 38.56);
    width: calc(var(--this-sum) / 3.55);
    height: fit-content;
    background: #FFFFFF;
    border-radius: calc(var(--this-sum) / 154.25);
    flex: none;
    order: 1;
    flex-grow: 0;
}

.instructionPerson {
    flex: none;
    order: 0;
    flex-grow: 0;
    align-items: center;
    display: flex;
    justify-content: end;
    z-index: 10;

    .personStart {
        width: calc(var(--this-sum) / 8.63);
    }
    
    .personEnd {
        width: calc(var(--this-sum) / 4.69);
    }
}

.instructionSearchInstruction {
    font-style: normal;
    font-weight: 400;
    font-size: calc(var(--this-sum) / 56.09);
}

#instructionCanvas { 
    width: calc(var(--this-sum) / 3.72);
    height: calc(var(--this-sum) / 3.72);
}

.progressBarContainerInstruction {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    width: fit-content;
    height: fit-content;
    width: calc(var(--this-sum) / 3.55);
    padding: calc(var(--this-sum) / 77.125);
    top: calc(var(--this-sum) / 22.03);
    background-color: #FFFFFF;
    border-radius: calc(var(--this-sum) / 154.25);
}

#instructionProgressbar {
    width: calc(var(--this-sum) / 3.80);
}

.instructionText {
    width: fit-content;
    height: fit-content;
    font-style: normal;
    font-weight: 400;
    font-size: calc(var(--this-sum) / 56.09);
    line-height: calc(var(--this-sum) / 36.29);
    letter-spacing: calc(var(--this-sum) / 6855.56);
    color: #393939;
    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 0;
}

.instructionControl {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: 0;
    gap: calc(var(--this-sum) / 77.125);
    flex: none;
    order: 1;
    align-self: stretch;
    flex-grow: 0;
}

.instructionBtnNext, .instructionBtnBack {
    -webkit-tap-highlight-color: transparent;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    padding: 0;
    gap: calc(var(--this-sum) / 308.5);
    flex: none;
    order: 1;
    flex-grow: 0;
}

.nextInstruction, .backInstruction {
    background: #FFFFFF;
    border: 0;
    font-style: normal;
    font-weight: 600;
    font-size: calc(var(--this-sum) / 56.09);
    line-height: calc(var(--this-sum) / 36.29);
    letter-spacing: calc(var(--this-sum) / 6855.56);
    text-align: center;
    flex: none;
    order: 0;
    flex-grow: 0;
}

.onHide {
    display: none;
}

.nextInstruction {
    color: var(--next-button-color);
}

.backInstruction {
    color: var(--back-button-color);
}


